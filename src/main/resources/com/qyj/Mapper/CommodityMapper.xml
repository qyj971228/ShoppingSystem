<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qyj.Mapper.CommodityMapper">

    <select id="findAll" resultType="commodity" parameterType="string">
        select * from commodities;
    </select>

    <!-- 模糊查询时,使用concat('%',#{commodityName},'%')的方法可以防止sql注入,不会被编译 -->
    <select id="findByCommodityName" resultType="commodity" parameterType="string">
        select * from commodities
        where commodityName like concat('%',#{commodityName},'%');
    </select>


    <select id="findByCommodityName_specific" resultType="commodity" parameterType="string">
        select * from commodities
        where commodityName=#{commodityName}
    </select>


    <select id="findByOriginAddress" resultType="commodity" parameterType="string">
        select * from commodities
        where originAddress like '%' #{originAddress} '%';
    </select>

    <select id="findByPrice" resultType="commodity" parameterType="priceRange">
        select * from commodities
        where price between #{low} and #{high};
    </select>

    <select id="findByUserId" resultType="commodity" parameterType="int">
        select * from commodities
        where userId=#{userId};
    </select>

    <insert id="insert" parameterType="commodity">
        insert into commodities
        values(null,#{userId},#{commodityName},#{price},#{inventory},#{originAddress});
    </insert>

    <delete id="deleteById" parameterType="int">
        delete from commodities
        where commodityId=#{commodityId};
    </delete>

    <update id="updateById" parameterType="commodity">
        update commodities
        set userId=#{userId},commodityName=#{commodityName},price=#{price},inventory=#{inventory},originAddress=#{originAddress}
        where commodityId=#{commodityId};
    </update>

    <update id="updateInventoryById" parameterType="commodity">
        update commodities
        set inventory=#{inventory}
        where commodityId=#{commodityId};
    </update>

    <select id="findByComplex" resultType="commodity" parameterType="complex_Select">
        select * from commodities
        <where>
            <if test="commodityName!=null">
                and commodityName like '%' #{commodityName} '%'
            </if>
            <if test="originAddress!=null">
                and originAddress like '%' #{originAddress} '%'
            </if>
            <if test="low!=0 and high!=0">
                and price between #{low} and #{high}
            </if>
        </where>
    </select>

</mapper>